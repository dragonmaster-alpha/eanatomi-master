- meta title: @product.meta_title, description: @product.meta_description, robots: @product.active_in_market?(context.market.key) ? 'index' : 'noindex'
- meta og: { image: @product.imgix_photo_url }

= render @product_schema

.mt-10.mb-2 = render 'breadcrumb'

.container.mx-auto data-controller='choose-variant'
  section.mx-6.md--mx-0.md--flex
    .bg-white.p-8 class="md--w-2/5"
      = variants_for(@product) do |variant, i|
        div role='product-photos' data-delegate="product-photo-#{i}"
          .text-center.product-photo-height
            = link_to image_tag(variant.photo.imgix_photo_url(w: 400, h: 400, q: 90), alt: variant.name, class: 'max-h-full border-grey-light border rounded'), variant.photo.imgix_photo_url(w: 1600, h: 1200, q: 90), role: "product-photo-#{i}"
          .flex.flex-wrap
            - variant.photos.where.not(id: variant.photo.id).each do |photo|
              .p-2.md--p-4.h-16.md--h-32.text-center.flex-no-shrink class='w-1/4 md--w-1/3'
                = link_to image_tag(photo.imgix_photo_url(w: 120, h: 90, q: 90), alt: variant.name, class: 'max-h-full border-grey-light border rounded'), photo.imgix_photo_url(w: 1000, h: 800, q: 90), role: "product-photo-#{i}"
            - if variant.video?
              .p-2.md--p-4.h-16.md--h-32.text-center.flex-no-shrink class='w-1/4 md--w-1/3'
                = link_to variant.video, target: '_blank', role: "product-photo-#{i}", class: 'mfp-iframe' do
                    = image_tag(variant.video_thumb, class: 'max-h-full border-1')
            - if variant.datasheet?
              .p-2.md--p-4.h-16.md--h-32.text-center.flex-no-shrink class='w-1/4 md--w-1/3'
                = link_to variant.datasheet_url(expires_in: 1.week.to_i), target: '_blank' do
                  i.fa.fa-file-pdf-o.fa-2x


    section class='md--w-3/5'
      .md--ml-16.mt-8
        h1.font-bold.text-lg.md--text-xl= @product

        = variants_for(@product) do |variant|
          .text-xs.mt-2 = "#{t('.sku_code')}: #{variant.sku}"

        - unless @product.has_variants?
          = variants_for(@product) do |variant|
            - if variant.in_stock?
              .uppercase.mt-8.text-green
                - case variant.stock
                - when 1
                  = t '.one_in_stock'
                - when 2..5
                  = t '.few_in_stock'
                - else
                  = t '.many_in_stock'
            - else
              .uppercase.mt-8.text-orange = variant.shipping_time_description


        - if @product.has_variants?
          .mt-8.font-bold.text-base = t('.variants')
          .mt-2.mb-8 role=('sortable' if can?(:update, Product)) data-model="Product"
            - @product.variants.each_with_index do |variant, i|
              .sortable-item data-id=variant.id
                - if can?(:update, variant.object)
                  .sortable-handle
                    i.fa.fa-arrows
                label
                  input.product-option-input type='radio' name='variant' checked=i.zero? autocomplete='off' value=variant.id data-target='choose-variant.input' data-action='change->choose-variant#change'
                  .product-option.text-sm.flex.p-3.items-center.cursor-pointer.bg-white.rounded-full.hover--bg-grey-lightest.mb-2
                    / .w-8.h-8.flex-none
                    /   = image_tag variant.photo.imgix_photo_url(w: 70, h: 50, q: 90), class: 'max-w-full max-h-full'
                    .mx-4
                      div = variant.name
                      - if variant.in_stock?
                        .uppercase.mt-2.text-green.text-xs
                          - case variant.stock
                          - when 1
                            = t '.one_in_stock'
                          - when 2..5
                            = t '.few_in_stock'
                          - else
                            = t '.many_in_stock'
                      - else
                        .uppercase.mt-2.text-orange.text-xs = variant.shipping_time_description

                    .ml-auto.mr-4
                      .product-option-checked = image_tag('icons/checked.svg')
                      / .product-option-unchecked = image_tag('icons/shape-oval.svg')


        = variants_for(@product) do |variant|
        
          - if variant.size? && @product.poster?
            .text-sm.mt-4.flex.items-center
              = image_tag('icons/size.png', class: 'w-6 mr-4')
              = variant.size

          - if variant.purchasable?
            = form_for [variant, @order_item], html: { 'data-remote' => true } do |f|
              .mt-8.flex.items-center.flex-wrap
                .flex.items-center.mr-4
                  .text-2xl.font-bold.uppercase = number_to_currency(currency(variant.sales_price).net_amount)
                  .text-xs.ml-2.uppercase = t('.vat_incl')
                .text-xs = "(#{number_to_currency(currency(variant.sales_price).gross_amount)} #{t('.vat_excl')})"

              - variant.volume_prices.each do |volume_price|
                .uppercase.mt-2.text-sm = t('.volume_price', quantity: volume_price.quantity, price: show_vat? ? number_to_currency(currency(volume_price.price).net_amount) : number_to_currency(currency(volume_price.price).gross_amount))

              - if variant.savings?
                .uppercase.mt-2.text-xs.line-through.text-red
                  - if show_vat?
                    = number_to_currency(currency(variant.price).net_amount)
                  - else
                    = number_to_currency(currency(variant.price).gross_amount)
                  span.ml-1
                    - if show_vat?
                      = t('.vat_incl')
                    - else
                      = t('.vat_excl')


              - if variant.has_addons?
                .mt-8.font-bold.text-lg = t('.addons')
                .mt-2 role=('sortable' if can?(:update, Product)) data-model="Product"
                  - variant.addons.each do |addon|
                    .sortable-item data-id=addon.id
                      - if can?(:update, addon.object)
                        .sortable-handle
                          i.fa.fa-arrows
                      label
                        input.product-option-input type='checkbox' name="addon_ids[#{addon.id}]"
                        .product-option.text-sm.flex.border-b.p-3.items-center.cursor-pointer.hover--bg-white
                          .w-8.h-8.flex-none
                            = image_tag addon.photo.imgix_photo_url(w: 70, h: 50, q: 90), class: 'max-w-full max-h-full'
                          .mx-4
                            .font-bold = addon.name
                            .mt-2 = "+#{number_to_currency(currency(addon.sales_price).net_amount)}"
                          .ml-auto.mr-4
                            .product-option-checked = image_tag('icons/i-check.svg')
                            .product-option-unchecked = image_tag('icons/shape-rectangle.svg')

              .mt-8.flex.bg-green.w-full.rounded-full.p-2
                .flex.border-grey-darker.border-px.border-r-0.rounded-full.bg-white.absolute role='stepper'
                  button.px-3.py-2.font-bold type='button' role='stepper-down' -
                  = f.text_field :quantity, class: 'w-6 font-bold bg-transparent text-center', role: 'stepper-input'
                  button.px-3.py-2.font-bold type='button' role='stepper-up' +
                button.btn.btn-transparent.flex-grow.text-center.text-white type='submit'
                  span.px-6.text-sm = t '.add_to_basket'

              .text-xs.mt-4 = t '.shipping_today' if shipping_today? && variant.in_stock?

          - else
            .mt-8 = raw t('.call_for_price')

          section.my-12
            .text-sm.leading-normal = raw variant.description

            - variant.additional_descriptions.sorted.each do |description|
              .additional-description.mt-8 data-controller="additional-description" data-target="additional-description.container"
                .leading-normal.text-sm data-target="additional-description.body" = raw description.body
                .additional-description-overlay data-target="additional-description.overlay"
                  button.underline.text-sm type="button" data-target="additional-description.expand" data-action="click->additional-description#expand"
                    = t '.read_more'
                    = image_tag('icons/tail-down.svg', class: 'ml-2 -mb-px')
                button.underline.text-sm type="button" data-target="additional-description.minimize" data-action="click->additional-description#minimize"
                  = t '.read_less'
                  = image_tag('icons/tail-up.svg', class: 'ml-2 -mb-px')

        .mt-12 = render 'usps'


  - if can?(:read, :admin)
    div.mt-8 data-turbolinks="false"
      = link_to "Rediger #{@product}", [:edit, :admin, @product], class: 'admin-action' if can?(:update, @product.object)
      = link_to "Rediger #{@product} billeder", [:admin, @product, :product_photos], class: 'admin-action' if can?(:create, ProductPhoto)
      - if can?(:create, @product.object)
        button.admin-action type='button' data-toggle='modal' data-target='@duplicate-modal' Kopier produkt
      = link_to "Slet #{@product}", [:admin, @product], class: 'admin-action', method: 'delete', 'data-confirm' => "Slet #{@product}?" if can?(:destroy, @product.object)
      = variants_for(@product) do |variant|
        div.mt-8
          = link_to "Rediger #{variant}", [:edit, :admin, variant], class: 'admin-action' if can?(:update, variant.object)
          = link_to "Rediger #{variant} billeder", [:admin, variant, :product_photos], class: 'admin-action' if can?(:create, ProductPhoto)
          = link_to "Slet #{variant}", [:admin, variant], class: 'admin-action', method: 'delete', 'data-confirm' => "Slet #{variant}?" if can?(:destroy, variant.object)

  - @similar.any?
    h2.text-center.font-normal.mt-24.mb-8.text-xl = t('.similar')
    .flex.flex-wrap.mb-10
      = render @similar


.modal.hidden.fade role='duplicate-modal'
  .modal-dialog.modal-sm
    .modal-content
      .modal-body
        = form_tag admin_product_duplicates_path(@product) do
          button.close type='button' data-dismiss='modal'
            span ×

          .my-4
            = text_field :product, :sku, value: '', class: 'text-field', placeholder: 'Nyt varenr'

          button.uppercase.underline.hover--font-bold type='submit' Kopier
